name: Deploy to AWS S3

on:
  push:
    branches: [ master ]
  workflow_dispatch:

env:
  AWS_REGION: us-east-1
  S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
  CLOUDFRONT_DISTRIBUTION_ID: ${{ secrets.AWS_CLOUDFRONT_DISTRIBUTION_ID }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci --prefer-offline --no-audit

    - name: Build for AWS
      run: npm run build
      env:
        NODE_ENV: production
        NEXT_PUBLIC_BASE_PATH: ""

    - name: Export static files
      run: npm run export

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Debug local vs S3
      run: |
        echo "üìÅ Contents of ./out/ directory:"
        ls -la ./out/ || echo "‚ùå ./out/ directory not found"
        echo ""
        echo "üìä S3 bucket contents:"
        aws s3 ls s3://${{ env.S3_BUCKET }}/ --recursive || echo "‚ùå Cannot list S3 bucket"

    - name: Deploy to S3
      run: |
        aws s3 sync ./out s3://${{ env.S3_BUCKET }} --delete --cache-control "public, max-age=31536000, immutable" --exclude "*.html"
        aws s3 sync ./out s3://${{ env.S3_BUCKET }} --delete --cache-control "public, max-age=0, must-revalidate" --include "*.html"
        
    - name: Invalidate CloudFront
      run: |
        if [ -n "${{ secrets.AWS_CLOUDFRONT_DISTRIBUTION_ID }}" ]; then
          aws cloudfront create-invalidation \
            --distribution-id ${{ secrets.AWS_CLOUDFRONT_DISTRIBUTION_ID }} \
            --paths "/*"
        else
          echo "‚ö†Ô∏è CloudFront Distribution ID not set - skipping cache invalidation"
        fi
          
    - name: Deployment Status
      run: |
        echo "üöÄ Portfolio successfully deployed to https://tanaydalal.com"
        echo "üìä S3 Bucket: ${{ env.S3_BUCKET }}"
        echo "üåê CloudFront Distribution: ${{ env.CLOUDFRONT_DISTRIBUTION_ID }}" 
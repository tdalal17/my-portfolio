# .github/workflows/deploy.yml

name: Deploy Portfolio Website

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          
      - name: Install dependencies
        run: npm install
        
      - name: Build Next.js site
        run: npm run build
        env:
          NODE_ENV: production
        
      - name: Upload GitHub Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./out
      
      # Create a zip file of the build for S3 deployment
      - name: Create build archive for S3
        run: |
          cd out
          zip -r ../build.zip .
          cd ..
      
      - name: Upload build artifact for S3
        uses: actions/upload-artifact@v3
        with:
          name: build-artifact
          path: build.zip

  deploy-github-pages:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  # Comment out the S3 deployment for now until AWS credentials are set up
  # deploy-to-s3:
  #   runs-on: ubuntu-latest
  #   needs: build
  #   steps:
  #     - name: Download build artifact
  #       uses: actions/download-artifact@v3
  #       with:
  #         name: build-artifact
  #         
  #     - name: Unzip build files
  #       run: unzip build.zip -d ./out
  #         
  #     - name: Configure AWS credentials
  #       uses: aws-actions/configure-aws-credentials@v2
  #       with:
  #         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #         aws-region: us-east-1
  #     
  #     - name: Deploy to S3 bucket
  #       run: |
  #         aws s3 sync ./out s3://${{ secrets.S3_BUCKET_NAME }} --delete
  #     
  #     - name: Invalidate CloudFront cache
  #       if: ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID != '' }}
  #       run: |
  #         aws cloudfront create-invalidation --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} --paths "/*"